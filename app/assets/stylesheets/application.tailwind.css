@import "./actiontext.css" layer(base);
@import "tom-select/dist/css/tom-select.css" layer(base);

@import "tailwindcss";

@plugin "daisyui";

@utility field_with_errors {
  /* Forms */
  & input {
    @apply input-error;
  }

  & select {
    @apply select-error;
  }

  & .ts-control {
    @apply select-error;
  }
}

@utility ts-control {
  .field_with_errors & {
    @apply select-error;
  }

  /* Tom-Select */
  @apply select text-base-content;

  & input {
    @apply text-base-content;
  }
  .ts-wrapper.multi & > div {
    @apply p-0 m-0 pl-1;
  }

  .ts-wrapper.single & {
    @apply bg-base-100!;
  }

  & .item {
    @apply text-base-content;
  }
}

@utility input {
  @apply dark:placeholder-gray-500;
}

@utility dropdown-content {
  /* Rails button_to Forms in Dropdowns */
  & li form.button_to {
    @apply block p-0;
  }
  & li form.button_to button {
    @apply flex items-center w-full cursor-pointer text-left px-4 py-2;
  }
}

@utility ts-dropdown-content {
  &:focus {
    @apply shadow-xl;
  }
  @apply bg-base-200 text-base-content rounded-[5px];
}

@utility ts-wrapper {
  &.plugin-remove_button .item {
    @apply rounded-md;
  }
  &.multi .ts-control > div {
    @apply p-0 m-0 pl-1;
  }

  &.plugin-remove_button .item .remove {
    @apply border-none text-lg leading-none py-1 rounded-r-lg;
  }

  & .option .title {
    display: block;
  }

  & .option .url {
    @apply block text-base-content text-sm;
  }

  &.single .ts-control {
    @apply bg-base-100!;
  }
}

@utility plugin-remove_button {
  &.ts-wrapper .item {
    @apply rounded-md;
  }

  &.ts-wrapper .item .remove {
    @apply border-none text-lg leading-none py-1 rounded-r-lg;
  }
}

@utility item {
  .ts-wrapper.plugin-remove_button & {
    @apply rounded-md;
  }

  .ts-wrapper.plugin-remove_button & .remove {
    @apply border-none text-lg leading-none py-1 rounded-r-lg;
  }

  .ts-control & {
    @apply text-base-content;
  }
}

@utility multi {
  &.ts-wrapper .ts-control > div {
    @apply p-0 m-0 pl-1;
  }
}

@utility remove {
  .ts-wrapper.plugin-remove_button .item & {
    @apply border-none text-lg leading-none py-1 rounded-r-lg;
  }
}

@utility ts-dropdown {
  @apply rounded-md border border-solid border-t border-gray-300 dark:border-gray-600 shadow-xl;

  & [data-selectable].option:first-child {
    @apply rounded-t-sm;
  }

  & [data-selectable].option:last-child {
    @apply rounded-b-sm;
  }

  & .create:hover {
    @apply bg-primary text-primary-content;
  }

  & .option:hover {
    @apply bg-primary text-primary-content;
  }

  & .active {
    @apply bg-primary text-primary-content;
  }

  &.single {
    @apply bg-base-100!;
  }
}

@utility option {
  .ts-dropdown &[data-selectable]:first-child {
    @apply rounded-t-sm;
  }

  .ts-dropdown &[data-selectable]:last-child {
    @apply rounded-b-sm;
  }

  .ts-dropdown &:hover {
    @apply bg-primary text-primary-content;
  }

  .ts-wrapper & .title {
    display: block;
  }

  .ts-wrapper & .url {
    @apply block text-base-content text-sm;
  }
}

@utility create {
  .ts-dropdown &:hover {
    @apply bg-primary text-primary-content;
  }
}

@utility active {
  .ts-dropdown & {
    @apply bg-primary text-primary-content;
  }
}

@utility title {
  .ts-wrapper .option & {
    display: block;
  }
}

@utility url {
  .ts-wrapper .option & {
    @apply block text-base-content text-sm;
  }
}

@utility single {
  &.ts-wrapper .ts-control {
    @apply bg-base-100!;
  }

  & .ts-dropdown {
    @apply bg-base-100!;
  }
}

@utility rounded-start-inherit {
  border-start-start-radius: inherit;
  border-start-end-radius: inherit;
  border-end-start-radius: unset;
  border-end-end-radius: unset;
}

/*
  The default border color has changed to `currentcolor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentcolor);
  }
}

@layer utilities {
  :root {
    @apply bg-base-200 dark:bg-base-300 min-h-lvh;
  }
}
